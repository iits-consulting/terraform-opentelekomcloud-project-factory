name: terratest workflow

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      region_eu-de:
        required: false
        type: boolean
        default: true
      region_eu-nl:
        required: false
        type: boolean
        default: false

jobs:
  run-terratest-eu-de:
    if: ${{ inputs.region_eu-de }}
    name: ${{ inputs.context }} on eu-de
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: "eu-de"
      TF_VAR_context: ${{ inputs.context }}
      OS_DOMAIN_NAME: ${{ secrets.OS_DOMAIN_NAME }}
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      VAULT_TOKEN_PATH: ${{ secrets.VAULT_TOKEN_PATH }}
      OS_KEY_PATH: ${{ secrets.OS_KEY_PATH }}
    container:
        image: vault
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Terratest "${{ inputs.context }}" on eu-de
        shell: sh
        run: |
          ###### INSTALL TERRAFORM && GO ######
          apk update && apk add go wget zip

          wget -q https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip
          unzip terraform_1.3.3_linux_amd64.zip && rm terraform_1.3.3_linux_amd64.zip
          mv terraform /usr/bin/terraform

          ###### grab missing values from vault ######
          cd .github/workflows
          ###### VAULT LOGIN #####
          vault write -field=token $VAULT_TOKEN_PATH role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID

          #### OTC CREDENTIALS #####
          export OS_ACCESS_KEY=$(vault kv get --field access_key $OS_KEY_PATH)
          export OS_SECRET_KEY=$(vault kv get --field secret_key $OS_KEY_PATH)

          export OS_AUTH_URL="https://iam.${TF_VAR_region}.otc.t-systems.com/v3"

          export AWS_ACCESS_KEY_ID=$OS_ACCESS_KEY
          export AWS_SECRET_ACCESS_KEY=$OS_SECRET_KEY

          ##### PROJECT CONFIGURATION #####
          #Current Context you are working on can be customer name or cloud name etc.
          export TF_VAR_domain_name="terratest.iits.tech"
          export TF_VAR_stage="test"
          export OS_PROJECT_NAME=$TF_VAR_region"_terratest"

          #### TERRAFORM LOCAL PLUGIN CACHING #####
          mkdir -p ${HOME}/Terraform/plugins
          export TF_PLUGIN_CACHE_DIR=${HOME}/Terraform/plugins

          #source .workflowenv
          cd ../../Terratest
          env
          exit
          ### download go modules
          go get -t ./...
          ### run go terratest 
          go test -v -tags=unit -timeout 90m

  
  run-terratest-eu-nl:
    if: ${{ inputs.region_eu-nl }}
    name: ${{ inputs.context }} on eu-nl
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: "eu-nl"
      TF_VAR_context: ${{ inputs.context }}
    container:
        image: vault
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Terratest "${{ inputs.context }}" on eu-nl
        shell: sh
        run: |
          ###### INSTALL TERRAFORM && GO ######
          apk update && apk add go wget zip
          exit
          wget -q https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip
          unzip terraform_1.3.3_linux_amd64.zip && rm terraform_1.3.3_linux_amd64.zip
          mv terraform /usr/bin/terraform

          cd .github/workflows
          source .workflowenv
          cd ../../Terratest
          ### download go modules
          go get -t ./...
          ### run go terratest 
          go test -v -tags=unit -timeout 90m
