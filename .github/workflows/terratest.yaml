name: Terratest

on: push

jobs:
  cce-test:
    name: Run Terratest for cce on eu-de and eu-nl
    runs-on: ubuntu-latest
    container:
        image: vault
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Terratest cce eu-de
        uses: "/.github/workflows/run-terratest.yaml"
        with:
          context: cce
          region: eu-de
        # shell: sh
        # run: |
        #   cd Terratest
        #   source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "eu-de"
        #   ### download go modules
        #   go get -t ./...
        #   ### run go terratest 
        #   go test -v -tags=unit -timeout 90m -args cce
  #     - name: Terratest cce eu-nl
  #       shell: sh
  #       run: |
  #         cd Terratest
  #         source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "eu-nl"
  #         ### download go modules
  #         go get -t ./...
  #         ### run go terratest 
  #         go test -v -tags=unit -timeout 90m -args cce
  # network-test:
  #   stage: Terratest network
  #   name: Run Terratest for network on eu-de and eu-nl
  #   runs-on: ubuntu-latest
  #   container:
  #       image: vault
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Terratest network eu-de
  #       shell: sh
  #       run: |
  #         cd Terratest
  #         source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "eu-de"
  #         ### download go modules
  #         go get -t ./...
  #         ### run go terratest 
  #         go test -v -tags=unit -timeout 90m -args network
  #     - name: Terratest network eu-nl
  #       shell: sh
  #       run: |
  #         cd Terratest
  #         source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "eu-nl"
  #         ### download go modules
  #         go get -t ./...
  #         ### run go terratest 
  #         go test -v -tags=unit -timeout 90m -args network
  # public_dns-test:
  #   stage: Terratest public_dns
  #   name: Run Terratest for public_dns on eu-de
  #   runs-on: ubuntu-latest
  #   container:
  #       image: vault
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Terratest public_dns eu-de
  #       shell: sh
  #       run: |
  #         cd Terratest
  #         source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "eu-de"
  #         ### download go modules
  #         go get -t ./...
  #         ### run go terratest 
  #         go test -v -tags=unit -timeout 90m -args public_dns
  # vpn-test:
  #   stage: Terratest vpn
  #   name: Run Terratest for vpn between eu-de and eu-nl
  #   runs-on: ubuntu-latest
  #   container:
  #       image: vault
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #       stage: Terratest eu-de
  #     - name: Terratest vpn
  #       shell: sh
  #       run: |
  #         cd Terratest
  #         source .envrc "${{ secrets.VAULT_ADDR }}" "${{ secrets.VAULT_ROLE_ID }}" "${{ secrets.VAULT_SECRET_ID }}" "${{ secrets.VAULT_TOKEN_PATH }}" "${{ secrets.OS_DOMAIN_NAME }}" "${{ secrets.OS_KEY_PATH }}" "ignore"
  #         ### download go modules
  #         go get -t ./...
  #         ### run go terratest 
  #         go test -v -tags=unit -timeout 90m -args vpn

# jobs:
#   go-test-eu-de:
#     name: Run Terratest for eu-de
#     runs-on: ubuntu-latest
#     container:
#         image: vault
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Setup && Terratest eu-de
#         shell: sh
#         run: |
#           ###### INSTALL TERRAFORM && GO ######
#           apk update && apk add go wget zip
          
#           wget -q https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip
#           unzip terraform_1.3.3_linux_amd64.zip && rm terraform_1.3.3_linux_amd64.zip
#           mv terraform /usr/bin/terraform
          
#           ###### WORKING DIRECTORY ######
#           cd Terratest
          
#           ###### VAULT LOGIN #####
#           export VAULT_ADDR=${{ secrets.VAULT_ADDR }}
#           export VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}
#           export VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
#           export VAULT_TOKEN=$(vault write -field=token ${{ secrets.VAULT_TOKEN_PATH }} role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID) || true
          
#           #### OTC CREDENTIALS #####
#           export OS_DOMAIN_NAME=${{ secrets.OS_DOMAIN_NAME }}
#           export OS_ACCESS_KEY=$(vault kv get --field access_key ${{ secrets.OS_KEY_PATH }})
#           export OS_SECRET_KEY=$(vault kv get --field secret_key ${{ secrets.OS_KEY_PATH }})
          
#           export TF_VAR_region="eu-de"
#           export OS_AUTH_URL="https://iam.${TF_VAR_region}.otc.t-systems.com/v3"
#           source .envrc
          
#           ### download go modules
#           go get -t ./...
          
#           ### run go terratest 
#           go test -v -tags=unit -timeout 90m
#   go-test-eu-nl:
#     name: Run Terratest for eu-nl
#     runs-on: ubuntu-latest
#     container:
#         image: vault
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Setup && Terratest eu-nl
#         shell: sh
#         run: |
#           ###### INSTALL TERRAFORM && GO ######
#           apk update && apk add go wget zip
          
#           wget -q https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip
#           unzip terraform_1.3.3_linux_amd64.zip && rm terraform_1.3.3_linux_amd64.zip
#           mv terraform /usr/bin/terraform
          
#           ###### WORKING DIRECTORY ######
#           cd Terratest
          
#           ###### VAULT LOGIN #####
#           export VAULT_ADDR=${{ secrets.VAULT_ADDR }}
#           export VAULT_ROLE_ID=${{ secrets.VAULT_ROLE_ID }}
#           export VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
#           export VAULT_TOKEN=$(vault write -field=token ${{ secrets.VAULT_TOKEN_PATH }} role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID) || true
          
#           #### OTC CREDENTIALS #####
#           export OS_DOMAIN_NAME=${{ secrets.OS_DOMAIN_NAME }}
#           export OS_ACCESS_KEY=$(vault kv get --field access_key ${{ secrets.OS_KEY_PATH }})
#           export OS_SECRET_KEY=$(vault kv get --field secret_key ${{ secrets.OS_KEY_PATH }})
          
#           export TF_VAR_region="eu-nl"
#           export OS_AUTH_URL="https://iam.${TF_VAR_region}.otc.t-systems.com/v3"
#           source .envrc
          
#           ### download go modules
#           go get -t ./...
          
#           ### run go terratest 
#           go test -v -tags=unit -timeout 90m